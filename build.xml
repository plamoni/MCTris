<project name="MCTris" default="dist" basedir=".">
	<description>
	CraftBukkit Plugin
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="resources" location="resources"/>
	<property name="deploy.user" value="plamoni" />
	<property name="deploy.host" value="hardac.code-freak.com" />
	<property name="deploy.port" value="443"/>
	<property name="deploy.dir" value="~/craftbukkit/plugins"/>
	<property name="plugin.name" value="MCTris" />
	
	<target name="init">
		<mkdir dir="${build}"/>
	</target>
	
	<target name="compile" depends="init" description="compile the source " >
		<javac srcdir="${src}" destdir="${build}" classpath="lib/bukkit-0.0.1-SNAPSHOT.jar" />
	</target>
	
	<target name="dist" depends="compile" description="generate the distribution" >
		<mkdir dir="${dist}"/>
		<jar jarfile="${dist}/${plugin.name}.jar" basedir="${build}">
			<fileset dir="${resources}" id="resources" />
			<fileset dir="${src}" id="source" />
		</jar>
	</target>

	<!-- The deploy targets are extremely specific to your environment (note that I need to have two different deploy 
	 	 targets just for my various development machines. So you will need to handle deployment on your own. I suggest
	 	 creating your own deploy target or changing ${dist} to your CraftBukkit/plugins directory. -->
	<target name="deploy" depends="dist" description="deploys to the specified server and location (from PC)" >
		<scp file="${dist}/${plugin.name}.jar" 
			 todir="${deploy.user}@${deploy.host}:${deploy.dir}" 
			 port="${deploy.port}" 
			 keyfile="/Users/plamoni/.ssh/id_rsa" 
			 passphrase="" />
	</target>
	
	<target name="deploy-pc" depends="dist" description="deploys to the specified server and location" >
		<scp file="${dist}/${plugin.name}.jar" 
			 todir="${deploy.user}@${deploy.host}:${deploy.dir}" 
			 port="${deploy.port}" 
			 password="${joshua.password}" 
			 trust="Yes" />
	</target>
	
	<target name="clean"
		description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>